#version 330 core

in vec2 uv;
in vec3 eyecam;
in vec3 lightcam;
in vec3 lighttan;
in vec3 eyetan;
in float distance;

out vec3 color;

uniform sampler2D diffuse;
uniform sampler2D normal;
uniform sampler2D specular;

void main()
{
	vec3 LightColor = vec3(1,1,1);
	float LightPower = 50.0f;
	
	vec3 MaterialDiffuseColor = texture(diffuse, uv).rgb;
	vec3 MaterialAmbientColor = vec3(0.1,0.1,0.1) * MaterialDiffuseColor;
	vec3 MaterialSpecularColor = texture(specular, uv).rgb;
	
	vec3 texnrml = texture(normal, uv).rgb*2.0 - 1.0;
	
	vec3 n = normalize( texnrml );
	vec3 l = normalize( lighttan );
	float cosTheta = clamp( dot( n,l ), 0, 1 );
	vec3 E = normalize(eyetan);
	vec3 R = reflect(-l,n);
	float cosAlpha = clamp( dot( E,R ), 0, 1 );
	
	color.rgb = MaterialAmbientColor +
		MaterialDiffuseColor * LightColor * LightPower * cosTheta / (distance*distance) +
		MaterialSpecularColor * LightColor * LightPower * pow(cosAlpha,5) / (distance*distance);
}
