#version 330 core

layout(location = 0) in vec3 vertexPosition;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal;

out vec2 texcoord;
out vec4 shadowcoord;
out vec3 worldpos;
out vec3 normal;
out vec3 eyedir;
out vec3 lightdir;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 depthbias;
uniform vec3 inversedir;

void main()
{
	worldpos = (model*vec4(vertexPosition, 1)).xyz;
	
	vec3 viewdir = (view*vec4(worldpos,1)).xyz;
	
	gl_Position = projection*vec4(viewdir,1);
	
	shadowcoord = depthbias * vec4(vertexPosition,1);
	
	eyedir = -viewdir;
	
	lightdir = (view*vec4(inversedir,0)).xyz;
	
	normal = (view*model*vec4(vertexNormal,0)).xyz;

	texcoord = vertexUV;
}
